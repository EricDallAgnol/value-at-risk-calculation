package com.gms.var;

import com.gms.var.data.repository.PnLTradesRepository;
import com.gms.var.data.service.DataManagementService;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.MediaType;
import org.springframework.mock.web.MockMultipartFile;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.web.servlet.MockMvc;

import static org.assertj.core.api.Assertions.assertThat;
import static org.hamcrest.Matchers.containsString;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

@RunWith(SpringRunner.class)
@SpringBootTest(
        webEnvironment = SpringBootTest.WebEnvironment.MOCK,
        classes = VarApplication.class)
@AutoConfigureMockMvc
public class DataPnLControllerIT {

    @Autowired
    private MockMvc mockMvc;

    @InjectMocks
    DataManagementService dataManagementService;

    @Mock
    private PnLTradesRepository pnLTradesRepository;

    @Test
    public void contextLoads() {
        assertThat(dataManagementService).isNotNull();
        assertThat(pnLTradesRepository).isNotNull();
    }


    @Test
    public void upload_wrong_file_type_500_expected() throws Exception {
        MockMultipartFile file
                = new MockMultipartFile(
                "file",
                "wrong.xml",
                MediaType.TEXT_XML_VALUE,
                "Hello, World!".getBytes()
        );
        mockMvc.perform(multipart("/data/upload-pnl").file(file))
                .andExpect(status().is5xxServerError())
                .andExpect(content().string(containsString("the file provided is not a CSV")));
    }

    @Test
    public void upload_csv_200_expected() throws Exception {
        MockMultipartFile file
                = new MockMultipartFile(
                "file",
                "right.csv",
                "text/csv",
                "Hello, World!".getBytes()
        );
        mockMvc.perform(multipart("/data/upload-pnl").file(file))
                .andExpect(status().isOk());
    }

    @Test
    public void load_and_get_trades_from_H2() throws Exception {
        MockMultipartFile file
                = new MockMultipartFile(
                "file",
                "right.csv",
                "text/csv",
                "AsOfDate,TradeID,PnL \n2023-11-06,Trade1,4777.03;-35280.68;7922.21;-13171.6;-24578.04;2110.91;4284.55;-9059.76;-1362.05;-15613.03;2246.1;-16573.48;-20827.31;2541.31;-9508.58;-35064.59;-17040.44;16591.91;798.52;836.44;874.36;-7516.22;-37053.97;10073.5;967.91;-16548.52;-13888.8;-17538.83;13654.33;14136.07;-8568.05;-18844.87;23054.34;1642.09;-16835.96;-2014.11;-3647.43;11035.58;20970.14;-1567.4;9963.6;17050.49;1814.14;-2318.31;-9458.98;-8326.99;7527.16;-30.46;253.4;1392.46;15148.15;12939.42;-3797.41;-3298.57;18081.76;28388.15;-28644.53;17683.71;2184.67;10184.18;3331.16;14805.19;7924.26;8273.28;-29062.84;-7798.18;7795.23;17635.44;2118.29;9702.8;-22684.31;10789.03;7684.59;5097.6;8916.11;-13325.48;-19632.81;3888.49;-7939.45;-14013.28;-26983.08;-7833.35;749.99;-8362.95;-8464.74;-19560.24;12900.67;26097.72;-5098.11;-9597.76;703.2;-20461.71;5639.74;18145.38;-13463.12;-11025.01;5472.89;9320.61;-9934.29;-6699.57;-6691.46;-1245.39;19159.92;9494.59;-10064.14;-22721.48;22486.98;-10563.16;4768.13;-7423.96;-853.92;-1674.73;3733.21;2204.35;-6921.57;-18686.07;-2645.25;-1302.89;8020.4;-10836.19;-77.22;-7868.77;-20810.28;-9498.53;-9752.09;1220.81;8417.72;2903.88;-17672.08;7357.75;-1443.02;-18946.31;-4954.1;-20599.05;16379.17;2384.89;-11289.25;13420.35;-29447.86;18660.89;-21715.61;12989.11;465.75;1386.41;786.96;-947.19;-4208.21;8491.13;22559.65;10748.01;8919.61;22476.38;-999.25;-3000.28;4537.12;-5073.43;2983.4;-15546.63;-168.28;12740.42;9817.76;646.4;-28958.71;-9474.07;-1293.06;-12822.25;17798.92;-550.99;-4246.35;3560.95;-6826.88;-4930.04;-6339.37;1250.35;-4538.38;-1432.06;3995.86;-2337.04;-9738.45;1023.94;7990.89;14469.97;11080.83;16837.69;-5556.66;-1422.09;3868.61;-5523.17;27595.03;8016.58;-11139.89;-4730.1;-20160.39;-26119.55;-3978.58;7619.61;-13046.63;11909.27;1080.56;1402.22;-14216.64;5717.95;15378.28;4583.32;-3132.61;-5216.87;17483.05;-10571.14;-15088.71;7940.25;5405.15;-7975.59;7750.66;923.41;-10201.76;10731.11;-13266.15;24548.09;-4637.49;-3009.79;8915.24;-3041.56;-3265.68;2273.12;-1536.19;5354.93;14000.63;-9443.12;-19045.23;-11554.56;6433.38;-2678.38;24842.35;6808.26;20063.43;-23051.87;-22681.04;4784.02;-9503.54;9450.18;-26431.78;5210.31;-3427.59;-10740.61;11689.68;8791.51;-22688.67;-4673.91;-2207.95;5531.82;-23613.26;651.83;14093.92;6079.5,".getBytes()
        );
        mockMvc.perform(multipart("/data/upload-pnl").file(file))
                .andExpect(status().isOk());

        mockMvc.perform(get("/data/all-trades"))
                .andExpect(status().isOk())
                .andExpect(content().string("[{\"asOfDate\":\"2023-11-06\",\"tradeID\":\"Trade1\",\"pnl\":[-37053.97,-35280.68,-35064.59,-29447.86,-29062.84,-28958.71,-28644.53,-26983.08,-26431.78,-26119.55,-24578.04,-23613.26,-23051.87,-22721.48,-22688.67,-22684.31,-22681.04,-21715.61,-20827.31,-20810.28,-20599.05,-20461.71,-20160.39,-19632.81,-19560.24,-19045.23,-18946.31,-18844.87,-18686.07,-17672.08,-17538.83,-17040.44,-16835.96,-16573.48,-16548.52,-15613.03,-15546.63,-15088.71,-14216.64,-14013.28,-13888.8,-13463.12,-13325.48,-13266.15,-13171.6,-13046.63,-12822.25,-11554.56,-11289.25,-11139.89,-11025.01,-10836.19,-10740.61,-10571.14,-10563.16,-10201.76,-10064.14,-9934.29,-9752.09,-9738.45,-9597.76,-9508.58,-9503.54,-9498.53,-9474.07,-9458.98,-9443.12,-9059.76,-8568.05,-8464.74,-8362.95,-8326.99,-7975.59,-7939.45,-7868.77,-7833.35,-7798.18,-7516.22,-7423.96,-6921.57,-6826.88,-6699.57,-6691.46,-6339.37,-5556.66,-5523.17,-5216.87,-5098.11,-5073.43,-4954.1,-4930.04,-4730.1,-4673.91,-4637.49,-4538.38,-4246.35,-4208.21,-3978.58,-3797.41,-3647.43,-3427.59,-3298.57,-3265.68,-3132.61,-3041.56,-3009.79,-3000.28,-2678.38,-2645.25,-2337.04,-2318.31,-2207.95,-2014.11,-1674.73,-1567.4,-1536.19,-1443.02,-1432.06,-1422.09,-1362.05,-1302.89,-1293.06,-1245.39,-999.25,-947.19,-853.92,-550.99,-168.28,-77.22,-30.46,253.4,465.75,646.4,651.83,703.2,749.99,786.96,798.52,836.44,874.36,923.41,967.91,1023.94,1080.56,1220.81,1250.35,1386.41,1392.46,1402.22,1642.09,1814.14,2110.91,2118.29,2184.67,2204.35,2246.1,2273.12,2384.89,2541.31,2903.88,2983.4,3331.16,3560.95,3733.21,3868.61,3888.49,3995.86,4284.55,4537.12,4583.32,4768.13,4777.03,4784.02,5097.6,5210.31,5354.93,5405.15,5472.89,5531.82,5639.74,5717.95,6079.5,6433.38,6808.26,7357.75,7527.16,7619.61,7684.59,7750.66,7795.23,7922.21,7924.26,7940.25,7990.89,8016.58,8020.4,8273.28,8417.72,8491.13,8791.51,8915.24,8916.11,8919.61,9320.61,9450.18,9494.59,9702.8,9817.76,9963.6,10073.5,10184.18,10731.11,10748.01,10789.03,11035.58,11080.83,11689.68,11909.27,12740.42,12900.67,12939.42,12989.11,13420.35,13654.33,14000.63,14093.92,14136.07,14469.97,14805.19,15148.15,15378.28,16379.17,16591.91,16837.69,17050.49,17483.05,17635.44,17683.71,17798.92,18081.76,18145.38,18660.89,19159.92,20063.43,20970.14,22476.38,22486.98,22559.65,23054.34,24548.09,24842.35,26097.72,27595.03,28388.15]}]"));
    }

    @Test
    public void load_and_drop_H2() throws Exception {
        MockMultipartFile file
                = new MockMultipartFile(
                "file",
                "right.csv",
                "text/csv",
                "AsOfDate,TradeID,PnL \n2023-11-06,Trade1,4777.03;-35280.68;7922.21;-13171.6;-24578.04;2110.91;4284.55;-9059.76;-1362.05;-15613.03;2246.1;-16573.48;-20827.31;2541.31;-9508.58;-35064.59;-17040.44;16591.91;798.52;836.44;874.36;-7516.22;-37053.97;10073.5;967.91;-16548.52;-13888.8;-17538.83;13654.33;14136.07;-8568.05;-18844.87;23054.34;1642.09;-16835.96;-2014.11;-3647.43;11035.58;20970.14;-1567.4;9963.6;17050.49;1814.14;-2318.31;-9458.98;-8326.99;7527.16;-30.46;253.4;1392.46;15148.15;12939.42;-3797.41;-3298.57;18081.76;28388.15;-28644.53;17683.71;2184.67;10184.18;3331.16;14805.19;7924.26;8273.28;-29062.84;-7798.18;7795.23;17635.44;2118.29;9702.8;-22684.31;10789.03;7684.59;5097.6;8916.11;-13325.48;-19632.81;3888.49;-7939.45;-14013.28;-26983.08;-7833.35;749.99;-8362.95;-8464.74;-19560.24;12900.67;26097.72;-5098.11;-9597.76;703.2;-20461.71;5639.74;18145.38;-13463.12;-11025.01;5472.89;9320.61;-9934.29;-6699.57;-6691.46;-1245.39;19159.92;9494.59;-10064.14;-22721.48;22486.98;-10563.16;4768.13;-7423.96;-853.92;-1674.73;3733.21;2204.35;-6921.57;-18686.07;-2645.25;-1302.89;8020.4;-10836.19;-77.22;-7868.77;-20810.28;-9498.53;-9752.09;1220.81;8417.72;2903.88;-17672.08;7357.75;-1443.02;-18946.31;-4954.1;-20599.05;16379.17;2384.89;-11289.25;13420.35;-29447.86;18660.89;-21715.61;12989.11;465.75;1386.41;786.96;-947.19;-4208.21;8491.13;22559.65;10748.01;8919.61;22476.38;-999.25;-3000.28;4537.12;-5073.43;2983.4;-15546.63;-168.28;12740.42;9817.76;646.4;-28958.71;-9474.07;-1293.06;-12822.25;17798.92;-550.99;-4246.35;3560.95;-6826.88;-4930.04;-6339.37;1250.35;-4538.38;-1432.06;3995.86;-2337.04;-9738.45;1023.94;7990.89;14469.97;11080.83;16837.69;-5556.66;-1422.09;3868.61;-5523.17;27595.03;8016.58;-11139.89;-4730.1;-20160.39;-26119.55;-3978.58;7619.61;-13046.63;11909.27;1080.56;1402.22;-14216.64;5717.95;15378.28;4583.32;-3132.61;-5216.87;17483.05;-10571.14;-15088.71;7940.25;5405.15;-7975.59;7750.66;923.41;-10201.76;10731.11;-13266.15;24548.09;-4637.49;-3009.79;8915.24;-3041.56;-3265.68;2273.12;-1536.19;5354.93;14000.63;-9443.12;-19045.23;-11554.56;6433.38;-2678.38;24842.35;6808.26;20063.43;-23051.87;-22681.04;4784.02;-9503.54;9450.18;-26431.78;5210.31;-3427.59;-10740.61;11689.68;8791.51;-22688.67;-4673.91;-2207.95;5531.82;-23613.26;651.83;14093.92;6079.5,".getBytes()
        );
        mockMvc.perform(multipart("/data/upload-pnl").file(file))
                .andExpect(status().isOk());

        mockMvc.perform(get("/data/all-trades"))
                .andExpect(status().isOk())
                .andExpect(content().string("[{\"asOfDate\":\"2023-11-06\",\"tradeID\":\"Trade1\",\"pnl\":[-37053.97,-35280.68,-35064.59,-29447.86,-29062.84,-28958.71,-28644.53,-26983.08,-26431.78,-26119.55,-24578.04,-23613.26,-23051.87,-22721.48,-22688.67,-22684.31,-22681.04,-21715.61,-20827.31,-20810.28,-20599.05,-20461.71,-20160.39,-19632.81,-19560.24,-19045.23,-18946.31,-18844.87,-18686.07,-17672.08,-17538.83,-17040.44,-16835.96,-16573.48,-16548.52,-15613.03,-15546.63,-15088.71,-14216.64,-14013.28,-13888.8,-13463.12,-13325.48,-13266.15,-13171.6,-13046.63,-12822.25,-11554.56,-11289.25,-11139.89,-11025.01,-10836.19,-10740.61,-10571.14,-10563.16,-10201.76,-10064.14,-9934.29,-9752.09,-9738.45,-9597.76,-9508.58,-9503.54,-9498.53,-9474.07,-9458.98,-9443.12,-9059.76,-8568.05,-8464.74,-8362.95,-8326.99,-7975.59,-7939.45,-7868.77,-7833.35,-7798.18,-7516.22,-7423.96,-6921.57,-6826.88,-6699.57,-6691.46,-6339.37,-5556.66,-5523.17,-5216.87,-5098.11,-5073.43,-4954.1,-4930.04,-4730.1,-4673.91,-4637.49,-4538.38,-4246.35,-4208.21,-3978.58,-3797.41,-3647.43,-3427.59,-3298.57,-3265.68,-3132.61,-3041.56,-3009.79,-3000.28,-2678.38,-2645.25,-2337.04,-2318.31,-2207.95,-2014.11,-1674.73,-1567.4,-1536.19,-1443.02,-1432.06,-1422.09,-1362.05,-1302.89,-1293.06,-1245.39,-999.25,-947.19,-853.92,-550.99,-168.28,-77.22,-30.46,253.4,465.75,646.4,651.83,703.2,749.99,786.96,798.52,836.44,874.36,923.41,967.91,1023.94,1080.56,1220.81,1250.35,1386.41,1392.46,1402.22,1642.09,1814.14,2110.91,2118.29,2184.67,2204.35,2246.1,2273.12,2384.89,2541.31,2903.88,2983.4,3331.16,3560.95,3733.21,3868.61,3888.49,3995.86,4284.55,4537.12,4583.32,4768.13,4777.03,4784.02,5097.6,5210.31,5354.93,5405.15,5472.89,5531.82,5639.74,5717.95,6079.5,6433.38,6808.26,7357.75,7527.16,7619.61,7684.59,7750.66,7795.23,7922.21,7924.26,7940.25,7990.89,8016.58,8020.4,8273.28,8417.72,8491.13,8791.51,8915.24,8916.11,8919.61,9320.61,9450.18,9494.59,9702.8,9817.76,9963.6,10073.5,10184.18,10731.11,10748.01,10789.03,11035.58,11080.83,11689.68,11909.27,12740.42,12900.67,12939.42,12989.11,13420.35,13654.33,14000.63,14093.92,14136.07,14469.97,14805.19,15148.15,15378.28,16379.17,16591.91,16837.69,17050.49,17483.05,17635.44,17683.71,17798.92,18081.76,18145.38,18660.89,19159.92,20063.43,20970.14,22476.38,22486.98,22559.65,23054.34,24548.09,24842.35,26097.72,27595.03,28388.15]}]"));

        mockMvc.perform(delete("/data/drop-pnl"))
                .andExpect(status().isOk());

        mockMvc.perform(get("/data/all-trades"))
                .andExpect(status().isOk())
                .andExpect(content().string("[]"));

    }



}
